{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","getReorderedGoods","goods","visibleGoods","ALPHABET","sort","LENGTH","a","b","length","reverse","reset","setState","alphabetButton","document","querySelector","lengthButton","reverseButton","classList","add","this","className","type","onClick","event","button","target","seccondButton","remove","map","item","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"iKAkBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,kBAAoB,SAClBC,EADkB,GAGd,IADFH,EACC,EADDA,SAAUD,EACT,EADSA,WAENK,EAAY,YAAOD,GAczB,OAZIH,IAAaL,EAASU,UACxBD,EAAaE,OAGXN,IAAaL,EAASY,QACxBH,EAAaE,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAGvCX,GACFK,EAAaO,UAGRP,GAxBX,EA2BEQ,MAAQ,WACN,EAAKC,SAAS,CAAEd,YAAY,IAC5B,EAAKc,SAAS,CAAEb,SAAUL,EAASM,OACnC,IAAMa,EAAiBC,SAASC,cAAc,YACxCC,EAAeF,SAASC,cAAc,eACtCE,EAAgBH,SAASC,cAAc,eAEzCF,GACFA,EAAeK,UAAUC,IAAI,YAG3BH,GACFA,EAAaE,UAAUC,IAAI,YAGzBF,GACFA,EAAcC,UAAUC,IAAI,aA3ClC,4CA+CE,WAAU,IAAD,OACP,EAAiCC,KAAKvB,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAChBI,EAAY,UAAOR,GAevB,OAbII,IAAaL,EAASU,SACxBD,EAAeiB,KAAKnB,kBAAkBN,EACpC,CAAEI,SAAUL,EAASU,SAAUN,eACxBC,IAAaL,EAASY,SAC/BH,EAAeiB,KAAKnB,kBAAkBN,EACpC,CAAEI,SAAUL,EAASY,OAAQR,gBAG7BA,IACFK,EAAeiB,KAAKnB,kBAAkBN,EACpC,CAAEI,WAAUD,YAAY,KAI1B,sBAAKuB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,QAAS,SAAAC,GACP,EAAKZ,SAAS,CAAEb,SAAUL,EAASU,WACnC,IAAMqB,EAASD,EAAME,OACfC,EAAgBb,SAASC,cAAc,eAE7CU,EAAOP,UAAUU,OAAO,YACX,OAAbD,QAAa,IAAbA,KAAeT,UAAUC,IAAI,aATjC,iCAeA,wBACEG,KAAK,SACLD,UAAU,6BACVE,QAAS,SAAAC,GACP,EAAKZ,SAAS,CAAEb,SAAUL,EAASY,SACnC,IAAMmB,EAASD,EAAME,OACfC,EAAgBb,SAASC,cAAc,YAE7CU,EAAOP,UAAUU,OAAO,YACX,OAAbD,QAAa,IAAbA,KAAeT,UAAUC,IAAI,aATjC,4BAeA,wBACEG,KAAK,SACLD,UAAU,6BACVE,QAAS,SAAAC,GACP,EAAKZ,SAAS,CAAEd,YAAa,EAAKD,MAAMC,aACxC,IAAM2B,EAASD,EAAME,OAEjB,EAAK7B,MAAMC,WACb2B,EAAOP,UAAUC,IAAI,YAErBM,EAAOP,UAAUU,OAAO,aAV9B,sBAiBE9B,GAAcC,IAAaL,EAASM,OACpC,mCACE,wBACEsB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKT,MAHhB,wBAYN,6BACE,6BACGR,EAAa0B,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBAnItC,GAAyBC,IAAMC,eC1B/BC,IAASC,OACP,cAAC,EAAD,IACApB,SAASqB,eAAe,W","file":"static/js/main.87424767.chunk.js","sourcesContent":["/* eslint-disable react/no-access-state-in-setstate */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends React.PureComponent {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE as SortType,\n  };\n\n  getReorderedGoods = (\n    goods: string[],\n    { sortType, isReversed }: ReorderOptions,\n  ) => {\n    const visibleGoods = [...goods];\n\n    if (sortType === SortType.ALPHABET) {\n      visibleGoods.sort();\n    }\n\n    if (sortType === SortType.LENGTH) {\n      visibleGoods.sort((a, b) => a.length - b.length);\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  reset = () => {\n    this.setState({ isReversed: false });\n    this.setState({ sortType: SortType.NONE });\n    const alphabetButton = document.querySelector('.is-info');\n    const lengthButton = document.querySelector('.is-success');\n    const reverseButton = document.querySelector('.is-warning');\n\n    if (alphabetButton) {\n      alphabetButton.classList.add('is-light');\n    }\n\n    if (lengthButton) {\n      lengthButton.classList.add('is-light');\n    }\n\n    if (reverseButton) {\n      reverseButton.classList.add('is-light');\n    }\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    let visibleGoods = [...goodsFromServer];\n\n    if (sortType === SortType.ALPHABET) {\n      visibleGoods = this.getReorderedGoods(goodsFromServer,\n        { sortType: SortType.ALPHABET, isReversed });\n    } else if (sortType === SortType.LENGTH) {\n      visibleGoods = this.getReorderedGoods(goodsFromServer,\n        { sortType: SortType.LENGTH, isReversed });\n    }\n\n    if (isReversed) {\n      visibleGoods = this.getReorderedGoods(goodsFromServer,\n        { sortType, isReversed: true });\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"button is-info is-light\"\n            onClick={event => {\n              this.setState({ sortType: SortType.ALPHABET });\n              const button = event.target as HTMLButtonElement;\n              const seccondButton = document.querySelector('.is-success');\n\n              button.classList.remove('is-light');\n              seccondButton?.classList.add('is-light');\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-success is-light\"\n            onClick={event => {\n              this.setState({ sortType: SortType.LENGTH });\n              const button = event.target as HTMLButtonElement;\n              const seccondButton = document.querySelector('.is-info');\n\n              button.classList.remove('is-light');\n              seccondButton?.classList.add('is-light');\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-warning is-light\"\n            onClick={event => {\n              this.setState({ isReversed: !this.state.isReversed });\n              const button = event.target as HTMLButtonElement;\n\n              if (this.state.isReversed) {\n                button.classList.add('is-light');\n              } else {\n                button.classList.remove('is-light');\n              }\n            }}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <>\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            </>\n          )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(item => (\n              <li data-cy=\"Good\" key={item}>{item}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}