{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","getReorderedGoods","goods","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","sortAlphabet","setState","sortLength","reset","this","className","type","onClick","map","item","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,kBAAoB,SAClBC,EADkB,GAGd,IADFH,EACC,EADDA,SAAUD,EACT,EADSA,WAENK,EAAY,YAAOD,GAiBzB,OAfAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQP,GACN,KAAKL,EAASa,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKZ,EAASe,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAOhB,EAASM,SAIlBF,GACFK,EAAaQ,UAGRR,GA3BX,EA8BES,aAAe,WACb,EAAKC,SAAS,CAAEd,SAAUL,EAASa,YA/BvC,EAkCEO,WAAa,WACX,EAAKD,SAAS,CAAEd,SAAUL,EAASe,UAnCvC,EAsCEE,QAAU,WACR,EAAKE,UAAS,SAAAhB,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAxCzB,EA4CEiB,MAAQ,WACN,EAAKF,SAAS,CACZd,SAAUL,EAASM,KACnBF,YAAY,KA/ClB,4CAmDE,WACE,MAAiCkB,KAAKnB,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdI,EAAea,KAAKf,kBAAkBN,EAAiBqB,KAAKnB,OAElE,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWlB,IAAaL,EAASa,SAC7B,iBACA,0BACJY,QAASH,KAAKJ,aALhB,iCAUA,wBACEM,KAAK,SACLD,UAAWlB,IAAaL,EAASe,OAC7B,oBACA,6BACJU,QAASH,KAAKF,WALhB,4BAUA,wBACEI,KAAK,SACLD,WAA0B,IAAfnB,EACP,oBACA,6BACJqB,QAASH,KAAKL,QALhB,sBAUEb,GAAcC,IAAaL,EAASM,OACpC,wBACEkB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKD,MAHhB,sBAWJ,6BACGZ,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eAtGpC,GAAyBC,IAAMC,eC1B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1cf05e5c.chunk.js","sourcesContent":["/* eslint-disable react/no-access-state-in-setstate */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends React.PureComponent<{}, ReorderOptions> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE as SortType,\n  };\n\n  getReorderedGoods = (\n    goods: string[],\n    { sortType, isReversed }: ReorderOptions,\n  ) => {\n    const visibleGoods = [...goods];\n\n    visibleGoods.sort((a, b) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return a.localeCompare(b);\n        case SortType.LENGTH:\n          return a.length - b.length;\n        default:\n          return SortType.NONE;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  sortAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = this.getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={sortType === SortType.ALPHABET\n              ? 'button is-info'\n              : 'button is-info is-light'}\n            onClick={this.sortAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sortType === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'}\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={isReversed === true\n              ? 'button is-warning'\n              : 'button is-warning is-light'}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n\n        </div>\n\n        <ul>\n          {visibleGoods.map(item => (\n            <li data-cy=\"Good\" key={item}>{item}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}