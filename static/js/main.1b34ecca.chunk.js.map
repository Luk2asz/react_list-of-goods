{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","getReorderedGoods","goods","visibleGoods","ALPHABET","sort","LENGTH","a","b","length","reverse","sortAlphabet","setState","sortLength","reset","this","className","type","onClick","map","item","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,kBAAoB,SAClBC,EADkB,GAGd,IADFH,EACC,EADDA,SAAUD,EACT,EADSA,WAENK,EAAY,YAAOD,GAczB,OAZIH,IAAaL,EAASU,UACxBD,EAAaE,OAGXN,IAAaL,EAASY,QACxBH,EAAaE,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAGvCX,GACFK,EAAaO,UAGRP,GAxBX,EA2BEQ,aAAe,WACb,EAAKC,SAAS,CAAEb,SAAUL,EAASU,YA5BvC,EA+BES,WAAa,WACX,EAAKD,SAAS,CAAEb,SAAUL,EAASY,UAhCvC,EAmCEI,QAAU,WACR,EAAKE,SAAS,CAAEd,YAAa,EAAKD,MAAMC,cApC5C,EAuCEgB,MAAQ,WACN,EAAKF,SAAS,CAAEd,YAAY,IAC5B,EAAKc,SAAS,CAAEb,SAAUL,EAASM,QAzCvC,4CA4CE,WACE,MAAiCe,KAAKlB,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAChBI,EAAY,UAAOR,GAevB,OAbII,IAAaL,EAASU,SACxBD,EAAeY,KAAKd,kBAAkBN,EACpC,CAAEI,SAAUL,EAASU,SAAUN,eACxBC,IAAaL,EAASY,SAC/BH,EAAeY,KAAKd,kBAAkBN,EACpC,CAAEI,SAAUL,EAASY,OAAQR,gBAG7BA,IACFK,EAAeY,KAAKd,kBAAkBN,EACpC,CAAEI,WAAUD,YAAY,KAI1B,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWjB,IAAaL,EAASU,SAC7B,iBACA,0BACJc,QAASH,KAAKJ,aALhB,iCAUA,wBACEM,KAAK,SACLD,UAAWjB,IAAaL,EAASY,OAC7B,oBACA,6BACJY,QAASH,KAAKF,WALhB,4BAUA,wBACEI,KAAK,SACLD,WAA0B,IAAflB,EACP,oBACA,6BACJoB,QAASH,KAAKL,QALhB,sBAUEZ,GAAcC,IAAaL,EAASM,OACpC,mCACE,wBACEiB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKD,MAHhB,wBAYN,6BACE,6BACGX,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBA/GtC,GAAyBC,IAAMC,eC1B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1b34ecca.chunk.js","sourcesContent":["/* eslint-disable react/no-access-state-in-setstate */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport class App extends React.PureComponent {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE as SortType,\n  };\n\n  getReorderedGoods = (\n    goods: string[],\n    { sortType, isReversed }: ReorderOptions,\n  ) => {\n    const visibleGoods = [...goods];\n\n    if (sortType === SortType.ALPHABET) {\n      visibleGoods.sort();\n    }\n\n    if (sortType === SortType.LENGTH) {\n      visibleGoods.sort((a, b) => a.length - b.length);\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  sortAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState({ isReversed: !this.state.isReversed });\n  };\n\n  reset = () => {\n    this.setState({ isReversed: false });\n    this.setState({ sortType: SortType.NONE });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    let visibleGoods = [...goodsFromServer];\n\n    if (sortType === SortType.ALPHABET) {\n      visibleGoods = this.getReorderedGoods(goodsFromServer,\n        { sortType: SortType.ALPHABET, isReversed });\n    } else if (sortType === SortType.LENGTH) {\n      visibleGoods = this.getReorderedGoods(goodsFromServer,\n        { sortType: SortType.LENGTH, isReversed });\n    }\n\n    if (isReversed) {\n      visibleGoods = this.getReorderedGoods(goodsFromServer,\n        { sortType, isReversed: true });\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={sortType === SortType.ALPHABET\n              ? 'button is-info'\n              : 'button is-info is-light'}\n            onClick={this.sortAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sortType === SortType.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'}\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={isReversed === true\n              ? 'button is-warning'\n              : 'button is-warning is-light'}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <>\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            </>\n          )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(item => (\n              <li data-cy=\"Good\" key={item}>{item}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}